version: "3.8"

services:
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:11
    environment:
      - "POSTGRES_USER=admin"
      - "POSTGRES_PASSWORD=admin"
    volumes:
      - "vol_postgres:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    networks:
      - pet_project_net
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - pet_project_net

  security-app:
      image: security-app
      container_name: security-app
      hostname: security-app
      build:
        context: ../../application
        dockerfile: Dockerfile
      environment:
        spring.datasource.url: 'jdbc:postgresql://postgres:5432/admin'
        spring.datasource.username: 'admin'
        spring.datasource.password: 'admin'
        spring.profiles.active: 'swagger-enabled,jwt-auth'
        jwt.access.token.ttl: '2'
        jwt.refresh.token.ttl: '720'
        jwt.access.public.key.path: 'keys/access_public_key.pem'
        jwt.access.private.key.path: 'keys/access_private_key.pem'
        jwt.refresh.public.key.path: 'keys/refresh_public_key.pem'
        jwt.refresh.private.key.path: 'keys/refresh_private_key.pem'
      ports:
        - "8081:8081"
      networks:
        - pet_project_net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - pet_project_net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # listeners https://www.confluent.io/de-de/blog/kafka-listeners-explained/
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9095,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - pet_project_net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 8080:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9095
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - pet_project_net

  redis-stack:
    image: redis/redis-stack-server:latest
    container_name: redis-stack-server
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  mongodb:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - 'MONGO_INITDB_ROOT_USERNAME=root'
      - 'MONGO_INITDB_ROOT_PASSWORD=123456789'
      - 'MONGO_INITDB_DATABASE=admin'
    networks:
      - pet_project_net

volumes:
  vol_postgres:
  redis-data:
  mongodb_data:
  pgadmin_data:

networks:
  pet_project_net:
    driver: bridge